<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bootimooc.bootimooc.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.bootimooc.bootimooc.entity.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classifyId" jdbcType="INTEGER" property="classifyid" />
    <result column="directionId" jdbcType="INTEGER" property="directionid" />
    <result column="levelId" jdbcType="INTEGER" property="levelid" />
    <result column="raleaseTime" jdbcType="TIMESTAMP" property="raleasetime" />
    <result column="studyCount" jdbcType="INTEGER" property="studycount" />
    <result column="couresCover" jdbcType="VARCHAR" property="courescover" />
    <result column="validDay" jdbcType="VARCHAR" property="validday" />
    <result column="lecturerId" jdbcType="INTEGER" property="lecturerid" />
    <result column="courseName" jdbcType="VARCHAR" property="coursename" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="free" jdbcType="VARCHAR" property="free" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="courseDuration" jdbcType="TIMESTAMP" property="courseduration" />
    <result column="homepageId" jdbcType="INTEGER" property="homepageid" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="enumber" jdbcType="INTEGER" property="enumber" />
    <result column="leve" jdbcType="VARCHAR" property="leve" />
    <result column="labela" jdbcType="VARCHAR" property="labela" />
    <result column="labelb" jdbcType="VARCHAR" property="labelb" />
    <result column="labelc" jdbcType="VARCHAR" property="labelc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, classifyId, directionId, levelId, raleaseTime, studyCount, couresCover, validDay, 
    lecturerId, courseName, `describe`, free, price, courseDuration, homepageId, keyword,
    position, enumber, leve, labela, labelb, labelc
  </sql>



  <!--添加的sql语句**********************-->
  <resultMap id="AllCourses" type="com.bootimooc.bootimooc.entity.Course" extends="BaseResultMap">
    <collection property="chapters" column="{courseId}=id" ofType="com.bootimooc.bootimooc.entity.Chapter"
                select="selectChaptersByCourseid">
      
    </collection>
  </resultMap>
  
  <select  id="selectCourseChapterById" resultMap="AllCourses">
    select * from course where id = #{id};
  </select>
  <select id="selectChaptersByCourseid" resultMap="com.bootimooc.bootimooc.mapper.ChapterMapper.BaseResultMap">
    select * from chapter where courseId = #{courseId}
  </select>
  <!--*********************************-->


  <select id="selectByExample" parameterType="com.bootimooc.bootimooc.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bootimooc.bootimooc.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bootimooc.bootimooc.entity.Course">
    insert into course (id, classifyId, directionId, 
      levelId, raleaseTime, studyCount, 
      couresCover, validDay, lecturerId, 
      courseName, `describe`, free,
      price, courseDuration, homepageId, 
      keyword, position, enumber, 
      leve, labela, labelb, 
      labelc)
    values (#{id,jdbcType=INTEGER}, #{classifyid,jdbcType=INTEGER}, #{directionid,jdbcType=INTEGER}, 
      #{levelid,jdbcType=INTEGER}, #{raleasetime,jdbcType=TIMESTAMP}, #{studycount,jdbcType=INTEGER}, 
      #{courescover,jdbcType=VARCHAR}, #{validday,jdbcType=VARCHAR}, #{lecturerid,jdbcType=INTEGER}, 
      #{coursename,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, #{free,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{courseduration,jdbcType=TIMESTAMP}, #{homepageid,jdbcType=INTEGER}, 
      #{keyword,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{enumber,jdbcType=INTEGER}, 
      #{leve,jdbcType=VARCHAR}, #{labela,jdbcType=VARCHAR}, #{labelb,jdbcType=VARCHAR}, 
      #{labelc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bootimooc.bootimooc.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classifyid != null">
        classifyId,
      </if>
      <if test="directionid != null">
        directionId,
      </if>
      <if test="levelid != null">
        levelId,
      </if>
      <if test="raleasetime != null">
        raleaseTime,
      </if>
      <if test="studycount != null">
        studyCount,
      </if>
      <if test="courescover != null">
        couresCover,
      </if>
      <if test="validday != null">
        validDay,
      </if>
      <if test="lecturerid != null">
        lecturerId,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="free != null">
        free,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="courseduration != null">
        courseDuration,
      </if>
      <if test="homepageid != null">
        homepageId,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="enumber != null">
        enumber,
      </if>
      <if test="leve != null">
        leve,
      </if>
      <if test="labela != null">
        labela,
      </if>
      <if test="labelb != null">
        labelb,
      </if>
      <if test="labelc != null">
        labelc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null">
        #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="directionid != null">
        #{directionid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null">
        #{levelid,jdbcType=INTEGER},
      </if>
      <if test="raleasetime != null">
        #{raleasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="studycount != null">
        #{studycount,jdbcType=INTEGER},
      </if>
      <if test="courescover != null">
        #{courescover,jdbcType=VARCHAR},
      </if>
      <if test="validday != null">
        #{validday,jdbcType=VARCHAR},
      </if>
      <if test="lecturerid != null">
        #{lecturerid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="free != null">
        #{free,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="courseduration != null">
        #{courseduration,jdbcType=TIMESTAMP},
      </if>
      <if test="homepageid != null">
        #{homepageid,jdbcType=INTEGER},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="enumber != null">
        #{enumber,jdbcType=INTEGER},
      </if>
      <if test="leve != null">
        #{leve,jdbcType=VARCHAR},
      </if>
      <if test="labela != null">
        #{labela,jdbcType=VARCHAR},
      </if>
      <if test="labelb != null">
        #{labelb,jdbcType=VARCHAR},
      </if>
      <if test="labelc != null">
        #{labelc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bootimooc.bootimooc.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classifyid != null">
        classifyId = #{record.classifyid,jdbcType=INTEGER},
      </if>
      <if test="record.directionid != null">
        directionId = #{record.directionid,jdbcType=INTEGER},
      </if>
      <if test="record.levelid != null">
        levelId = #{record.levelid,jdbcType=INTEGER},
      </if>
      <if test="record.raleasetime != null">
        raleaseTime = #{record.raleasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studycount != null">
        studyCount = #{record.studycount,jdbcType=INTEGER},
      </if>
      <if test="record.courescover != null">
        couresCover = #{record.courescover,jdbcType=VARCHAR},
      </if>
      <if test="record.validday != null">
        validDay = #{record.validday,jdbcType=VARCHAR},
      </if>
      <if test="record.lecturerid != null">
        lecturerId = #{record.lecturerid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.free != null">
        free = #{record.free,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.courseduration != null">
        courseDuration = #{record.courseduration,jdbcType=TIMESTAMP},
      </if>
      <if test="record.homepageid != null">
        homepageId = #{record.homepageid,jdbcType=INTEGER},
      </if>
      <if test="record.keyword != null">
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.enumber != null">
        enumber = #{record.enumber,jdbcType=INTEGER},
      </if>
      <if test="record.leve != null">
        leve = #{record.leve,jdbcType=VARCHAR},
      </if>
      <if test="record.labela != null">
        labela = #{record.labela,jdbcType=VARCHAR},
      </if>
      <if test="record.labelb != null">
        labelb = #{record.labelb,jdbcType=VARCHAR},
      </if>
      <if test="record.labelc != null">
        labelc = #{record.labelc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      classifyId = #{record.classifyid,jdbcType=INTEGER},
      directionId = #{record.directionid,jdbcType=INTEGER},
      levelId = #{record.levelid,jdbcType=INTEGER},
      raleaseTime = #{record.raleasetime,jdbcType=TIMESTAMP},
      studyCount = #{record.studycount,jdbcType=INTEGER},
      couresCover = #{record.courescover,jdbcType=VARCHAR},
      validDay = #{record.validday,jdbcType=VARCHAR},
      lecturerId = #{record.lecturerid,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      describe = #{record.describe,jdbcType=VARCHAR},
      free = #{record.free,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      courseDuration = #{record.courseduration,jdbcType=TIMESTAMP},
      homepageId = #{record.homepageid,jdbcType=INTEGER},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      enumber = #{record.enumber,jdbcType=INTEGER},
      leve = #{record.leve,jdbcType=VARCHAR},
      labela = #{record.labela,jdbcType=VARCHAR},
      labelb = #{record.labelb,jdbcType=VARCHAR},
      labelc = #{record.labelc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootimooc.bootimooc.entity.Course">
    update course
    <set>
      <if test="classifyid != null">
        classifyId = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="directionid != null">
        directionId = #{directionid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null">
        levelId = #{levelid,jdbcType=INTEGER},
      </if>
      <if test="raleasetime != null">
        raleaseTime = #{raleasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="studycount != null">
        studyCount = #{studycount,jdbcType=INTEGER},
      </if>
      <if test="courescover != null">
        couresCover = #{courescover,jdbcType=VARCHAR},
      </if>
      <if test="validday != null">
        validDay = #{validday,jdbcType=VARCHAR},
      </if>
      <if test="lecturerid != null">
        lecturerId = #{lecturerid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="free != null">
        free = #{free,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="courseduration != null">
        courseDuration = #{courseduration,jdbcType=TIMESTAMP},
      </if>
      <if test="homepageid != null">
        homepageId = #{homepageid,jdbcType=INTEGER},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="enumber != null">
        enumber = #{enumber,jdbcType=INTEGER},
      </if>
      <if test="leve != null">
        leve = #{leve,jdbcType=VARCHAR},
      </if>
      <if test="labela != null">
        labela = #{labela,jdbcType=VARCHAR},
      </if>
      <if test="labelb != null">
        labelb = #{labelb,jdbcType=VARCHAR},
      </if>
      <if test="labelc != null">
        labelc = #{labelc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootimooc.bootimooc.entity.Course">
    update course
    set classifyId = #{classifyid,jdbcType=INTEGER},
      directionId = #{directionid,jdbcType=INTEGER},
      levelId = #{levelid,jdbcType=INTEGER},
      raleaseTime = #{raleasetime,jdbcType=TIMESTAMP},
      studyCount = #{studycount,jdbcType=INTEGER},
      couresCover = #{courescover,jdbcType=VARCHAR},
      validDay = #{validday,jdbcType=VARCHAR},
      lecturerId = #{lecturerid,jdbcType=INTEGER},
      courseName = #{coursename,jdbcType=VARCHAR},
      describe = #{describe,jdbcType=VARCHAR},
      free = #{free,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      courseDuration = #{courseduration,jdbcType=TIMESTAMP},
      homepageId = #{homepageid,jdbcType=INTEGER},
      keyword = #{keyword,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      enumber = #{enumber,jdbcType=INTEGER},
      leve = #{leve,jdbcType=VARCHAR},
      labela = #{labela,jdbcType=VARCHAR},
      labelb = #{labelb,jdbcType=VARCHAR},
      labelc = #{labelc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>